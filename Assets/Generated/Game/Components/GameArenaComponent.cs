//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ArenaComponent arena { get { return (ArenaComponent)GetComponent(GameComponentsLookup.Arena); } }
    public bool hasArena { get { return HasComponent(GameComponentsLookup.Arena); } }

    public void AddArena(Assets.Scripts.Configs.Arena.ArenaData newArenaData, UnityEngine.Rect newRect, float newCellSize) {
        var index = GameComponentsLookup.Arena;
        var component = (ArenaComponent)CreateComponent(index, typeof(ArenaComponent));
        component.ArenaData = newArenaData;
        component.Rect = newRect;
        component.CellSize = newCellSize;
        AddComponent(index, component);
    }

    public void ReplaceArena(Assets.Scripts.Configs.Arena.ArenaData newArenaData, UnityEngine.Rect newRect, float newCellSize) {
        var index = GameComponentsLookup.Arena;
        var component = (ArenaComponent)CreateComponent(index, typeof(ArenaComponent));
        component.ArenaData = newArenaData;
        component.Rect = newRect;
        component.CellSize = newCellSize;
        ReplaceComponent(index, component);
    }

    public void RemoveArena() {
        RemoveComponent(GameComponentsLookup.Arena);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherArena;

    public static Entitas.IMatcher<GameEntity> Arena {
        get {
            if (_matcherArena == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Arena);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherArena = matcher;
            }

            return _matcherArena;
        }
    }
}

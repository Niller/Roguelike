//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetMarker targetMarker { get { return (TargetMarker)GetComponent(GameComponentsLookup.TargetMarker); } }
    public bool hasTargetMarker { get { return HasComponent(GameComponentsLookup.TargetMarker); } }

    public void AddTargetMarker(GameEntity newTarget) {
        var index = GameComponentsLookup.TargetMarker;
        var component = (TargetMarker)CreateComponent(index, typeof(TargetMarker));
        component.Target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceTargetMarker(GameEntity newTarget) {
        var index = GameComponentsLookup.TargetMarker;
        var component = (TargetMarker)CreateComponent(index, typeof(TargetMarker));
        component.Target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetMarker() {
        RemoveComponent(GameComponentsLookup.TargetMarker);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetMarker;

    public static Entitas.IMatcher<GameEntity> TargetMarker {
        get {
            if (_matcherTargetMarker == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetMarker);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetMarker = matcher;
            }

            return _matcherTargetMarker;
        }
    }
}
